/*
 * Copyright 2014 Instituto de Sistemas e Robotica, Instituto Superior Tecnico
 *
 * This file is part of RoAH RSBB Comm.
 *
 * RoAH RSBB Comm is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * RoAH RSBB Comm is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with RoAH RSBB Comm.  If not, see <http://www.gnu.org/licenses/>.
 */

package roah_rsbb_msgs;

import "Time.proto";

option java_package = "eu.rockin.roah_rsbb_msgs";
option java_outer_classname = "RobotStateProtos";

message RobotState {
  enum CompType {
    COMP_ID  = 6666;
    MSG_TYPE = 40;
  }

  // UTC time, to check clock synchronization and send acknowledgements
  required Time time = 1;
  
  // Number of messages saved by the offline data saver
  required uint32 messages_saved = 2;

  enum State {
    STOP = 0;
    PREPARING = 1;
    WAITING_GOAL = 2;
    EXECUTING = 3;
    RESULT_TX = 4;
  }
  
  // The state of the robot in the benchmark
  required State robot_state = 3;
  
  // For all repeated string fields:
  // Repeated equal strings are ignored by the RSBB unless a message
  // that doesn't contain the string is received in between
  
  // HWV, HOMF: Notifications issued
  repeated string notifications = 8;
  // HWV: Activation event
  repeated string activation_event = 9;
  // HWV: Visitor
  repeated string visitor = 10;
  
  // HCFGAC: Final command given
  repeated string final_command = 16;
  // HCFGAC: State of switch 1
  optional bool devices_switch_1 = 17;
  // HCFGAC: State of switch 2
  optional bool devices_switch_2 = 18;
  // HCFGAC:  State of switch 3
  optional bool devices_switch_3 = 19;
  // HCFGAC: State of dimmer (0-100)
  optional uint32 devices_dimmer = 20;
  // HCFGAC: State of blinds (0-100)
  optional uint32 devices_blinds = 21;
  // HCFGAC: True means the tablet should display the map
  // False means it should display the call button
  optional bool tablet_display_map = 22;
  
  // Generic benchmark goal's result
  optional string generic_result = 23;
}
